name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      release:
        type: string
        required: true
        description: 'Internal release version counter'
        default: '0'
      erlang:
        type: string
        required: true
        description: 'Erlang OTP version'
        default: '27.3.4.3'
      couchdb:
        type: string
        required: true
        description: 'CouchDB version'
        default: '3.5.0'
      fauxton:
        type: string
        required: true
        description: 'CouchDB Fauxton version'
        default: '1.3.4'

jobs:
  build_and_push:
    name: Push image to Github Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Dockerfile
        env:
          COUCHDB_VERSION: ${{ github.event.inputs.couchdb }}
          RELEASE_VERSION: ${{ github.event.inputs.release }}
          ERLANG_VERSION: ${{ github.event.inputs.erlang }}
          FAUXTON_VERSION: ${{ github.event.inputs.fauxton }}
        run: |
          export CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
          sed -i -e "s/__COUCHDB_VERSION__/$COUCHDB_VERSION/" ${{ github.workspace }}/Dockerfile
          sed -i -e "s/__RELEASE_VERSION__/$RELEASE_VERSION/" ${{ github.workspace }}/Dockerfile
          sed -i -e "s/__ERLANG_OTP_VERSION__/$ERLANG_VERSION/" ${{ github.workspace }}/Dockerfile
          sed -i -e "s/__FAUXTON_VERSION__/$FAUXTON_VERSION/" ${{ github.workspace }}/Dockerfile
          sed -i -e "s/__CURRENT_TIME__/$CURRENT_TIME/" ${{ github.workspace }}/Dockerfile

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.event.inputs.couchdb }}-r${{ github.event.inputs.release }}-tumbleweed
            #type=raw,value=latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          provenance: false
          build-args: |
            ERLANG_OTP_VERSION=${{ github.event.inputs.erlang }}
            COUCHDB_VERSION=${{ github.event.inputs.couchdb }}
            FAUXTON_VERSION=${{ github.event.inputs.fauxton }}
            RELEASE_VERSION=${{ github.event.inputs.release }}
            MEND_EMAIL=${{ secrets.MEND_EMAIL }}
            MEND_ORGANIZATION=${{ secrets.MEND_ORGANIZATION }}
            MEND_URL=${{ secrets.MEND_URL }}
            MEND_USER_KEY=${{ secrets.MEND_USER_KEY }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Scan Docker Image
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ github.event.inputs.couchdb }}-r${{ github.event.inputs.release }}-tumbleweed
          COUCHDB_VERSION: ${{ github.event.inputs.couchdb }}
          RELEASE_VERSION: ${{ github.event.inputs.release }}
          MEND_EMAIL: ${{ secrets.MEND_EMAIL }}
          MEND_ORGANIZATION: ${{ secrets.MEND_ORGANIZATION }}
          MEND_URL: ${{ secrets.MEND_URL }}
          MEND_USER_KEY: ${{ secrets.MEND_USER_KEY }}
        run: |
          curl -L https://downloads.mend.io/cli/linux_amd64/mend -o /tmp/mend && chmod +x /tmp/mend && \
          /tmp/mend image ${IMAGE,,} -s "OpenScape UC Portfolio//OSEM third party applications//couchdb-osem-docker-image - $COUCHDB_VERSION-r$RELEASE_VERSION-tumbleweed"
        working-directory: /tmp

      - name: Create a release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COUCHDB_VERSION: ${{ github.event.inputs.couchdb }}
          ERLANG_VERSION: ${{ github.event.inputs.erlang }}
          FAUXTON_VERSION: ${{ github.event.inputs.fauxton }}
          RELEASE_VERSION: ${{ github.event.inputs.release }}
        run: |
          echo -e "CouchDB build details\n- CouchDB: $COUCHDB_VERSION\n- Erlang OTP: $ERLANG_VERSION\n- Fauxton: $FAUXTON_VERSION\n" > rn
          gh release create "$COUCHDB_VERSION-r$RELEASE_VERSION-tumbleweed" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$COUCHDB_VERSION-r$RELEASE_VERSION-tumbleweed" \
              --notes-file rn
