name: Build Image

on:
  workflow_dispatch:
    inputs:
      release:
        required: true
      erlang:
        type: choice
        description: Select Erlang OTP version
        options:
        - "25.3.2.13"
      couchdb:
        type: choice
        description: Select CouchDB version
        options:
        - "3.3.3"
      fauxton:
        type: choice
        description: Select CouchDB Fauxton version
        options:
        - "1.3.1"

jobs:
  build_and_push:
    name: Push image to Github Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.event.inputs.couchdb }}-r${{ github.event.inputs.release }}-tumbleweed

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            ERLANG_OTP_VERSION=${{ github.event.inputs.erlang }}
            COUCHDB_VERSION=${{ github.event.inputs.couchdb }}
            FAUXTON_VERSION=${{ github.event.inputs.fauxton }}
            RELEASE_VERSION=${{ github.event.inputs.release }}
            MEND_EMAIL=${{ secrets.MEND_EMAIL }}
            MEND_ORGANIZATION=${{ secrets.MEND_ORGANIZATION }}
            MEND_URL=${{ secrets.MEND_URL }}
            MEND_USER_KEY=${{ secrets.MEND_USER_KEY }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Delete Deployments
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyRemoveDeployments: true
